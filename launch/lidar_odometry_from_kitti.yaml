# -----------------------------------------------------------------------------
#                        SLAM system definition for MOLA
# This file defines:
# An input sensor from a ROS 2 topic, and the MOLA Visualizer.
# -----------------------------------------------------------------------------

modules:
  # =====================
  # MolaViz
  # =====================
  - name: viz
    type: mola::MolaViz
    #verbosity_level: DEBUG
    params: ~ # none

# Offline or online sensory data sources =====================
  # =====================
  # KittiOdometryDataset
  # =====================
  - type: mola::KittiOdometryDataset
    name: kitti_input
    execution_rate: 20 # Hz
    #verbosity_level: INFO
    gui_preview_sensors:
      - raw_sensor_label: lidar
        decimation: 1
        win_pos: 5 70 400 400
      - raw_sensor_label: image_0
        decimation: 1
        win_pos: 5 370 600 200
      - raw_sensor_label: image_1
        decimation: 1
        win_pos: 5 500 600 200
    params:
      base_dir: ${KITTI_BASE_DIR}
      sequence: ${KITTI_SEQ}
      time_warp_scale: 0.6 #1.0
      publish_lidar: true
      publish_image_0: true
      publish_image_1: true
      publish_ground_truth: true

  - name: lidar_odom
    type: mola::LidarInertialOdometry
    verbosity_level: DEBUG
    raw_data_source: 'kitti_input'
    # This includes here a whole block "params: (...)"
    # with the LIDAR-Odometry pipeline configuration:
    params:
      # These sensor labels will be handled as LIDAR observations:
      lidar_sensor_labels: ['lidar', 'Velodyne1_SCAN']

      # Optionally, drop lidar data too close in time:
      min_time_between_scans: 0.2  # [seconds]

      # LIDAR observations are, first, loaded using a generator:
      observations_generator: ~
      
      # then, optionally, filtered:
      observations_filter: $include{../params/observations_filter_pipeline.yaml}

      # These sensor labels will be handled as IMU observations:
      imu_sensor_label: 'imu'
      
      min_dist_xyz_between_keyframes: 0.5  # [m]
      min_rotation_between_keyframes: 15.0  # [deg]
      
      icp_settings_with_vel: $include{../params/icp_odom_params.yaml}
      icp_settings_without_vel: $include{../params/icp_odom_params.yaml}

      # Minimum ICP quality to insert it into the map:
      min_icp_goodness: 0.30
      
      # Local map updates:
      # - First time: Using the mp2p_icp pipeline generator:
      localmap_generator: $include{../params/localmap_generator.yaml}
      # - Rest of observations: use these *pointcloud* layers of the observation 
      #   metric_map_t and *insert* them into the local map:
      observation_layers_to_merge_local_map: 'decimated'


    # $ include{../params/config-lidar-inertial-odometry.yaml}

