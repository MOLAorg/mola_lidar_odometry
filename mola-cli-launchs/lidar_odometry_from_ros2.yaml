# -----------------------------------------------------------------------------
#                        SLAM system definition for MOLA
# This file defines:
# An input sensor from a ROS 2 topic, and the MOLA Visualizer.
# -----------------------------------------------------------------------------

modules:
  # =====================
  # MolaViz
  # =====================
  - name: viz
    type: mola::MolaViz
    #verbosity_level: DEBUG
    params: ~ # none

  - name: icp_odom
    type: mola::LidarInertialOdometry
    #verbosity_level: DEBUG
    raw_data_source: 'dataset_input'
    # This includes here a whole block "params: (...)"
    # with the LIDAR-Odometry pipeline configuration:
    params: '${MOLA_ODOMETRY_PIPELINE_YAML|../params/lidar-odometry-pipeline-default.yaml}'

# Offline or online sensory data sources =====================
  - type: mola::InputROS2
    name: dataset_input
    # In InputROS2, this execution rate (Hz) determines the
    # rate of publishing odometry observations, if enabled.
    # All other subscribed sensors are forwarded to the MOLA
    # system without delay as they are received from ROS.
    execution_rate: 20 # Hz
    #verbosity_level: INFO
    gui_preview_sensors:
      - raw_sensor_label: ${MOLA_LIDAR_NAME|lidar}
        decimation: 1
        win_pos: 5 5 400 400
    params:
      base_link_frame: base_footprint
      odom_frame: odom
      publish_odometry_from_tf: false
      subscribe:
        - topic: ${MOLA_LIDAR_TOPIC|/ouster/points}
          type: PointCloud2
          output_sensor_label: ${MOLA_LIDAR_NAME|lidar}
          # If present, this will override whatever /tf tells about the sensor pose:
          fixed_sensor_pose: "0 0 0 0 0 0"  # 'x y z yaw_deg pitch_deg roll_deg''
          #queue_size: 100  # QoS "history" length
        - topic: /odom
          type: Odometry
          output_sensor_label: odom
