# -----------------------------------------------------------------------------
#                        SLAM system definition for MOLA
#
# This file defines: Input and output with ROS 2, the MOLA Visualizer.
# This can be launched with the ROS2 launch file "lidar-odometry.launch.py"
# -----------------------------------------------------------------------------

modules:
  # =====================
  # MolaViz
  # =====================
  - name: viz
    type: mola::MolaViz
    #verbosity_level: DEBUG
    params: ~ # none

  # =====================
  # LidarOdometry
  # =====================
  - name: icp_odom
    type: mola::LidarOdometry
    #verbosity_level: DEBUG
    raw_data_source: 'dataset_input'
    # This includes here a whole block "params: (...)"
    # with the LIDAR-Odometry pipeline configuration:
    params: '${MOLA_ODOMETRY_PIPELINE_YAML|../pipelines/lidar3d-default.yaml}'

  # =====================
  # ROS2 -> MOLA
  # =====================
  - type: mola::InputROS2
    name: dataset_input
    # In InputROS2, this execution rate (Hz) determines the
    # rate of publishing odometry observations, if enabled.
    # All other subscribed sensors are forwarded to the MOLA
    # system without delay as they are received from ROS.
    execution_rate: 20 # Hz
    #verbosity_level: INFO
    gui_preview_sensors:
      - raw_sensor_label: ${MOLA_LIDAR_NAME|lidar}
        decimation: 1
        win_pos: 5 5 400 400
    params:
      base_link_frame: base_footprint
      odom_frame: odom
      publish_odometry_from_tf: false
      subscribe:
        - topic: ${MOLA_LIDAR_TOPIC|/ouster/points}
          type: PointCloud2
          output_sensor_label: ${MOLA_LIDAR_NAME|lidar}
          # If present, this will override whatever /tf tells about the sensor pose:
          fixed_sensor_pose: "0 0 0 0 0 0"  # 'x y z yaw_deg pitch_deg roll_deg''
          use_fixed_sensor_pose: ${MOLA_USE_FIXED_LIDAR_POSE|false}
          #queue_size: 100  # QoS "history" length
        - topic: /odom
          type: Odometry
          output_sensor_label: odom

  # =====================
  # MOLA -> ROS2
  # =====================
  - name: ros2_output
    type: mola::OutputROS2

    # In OutputROS2, this execution rate (Hz) is not relevant.
    execution_rate: 20 # Hz
    #verbosity_level: INFO
    params:
      # Whenever a MOLA odometry/SLAM system publishes a new pose estimate
      # it will be forwarded to /tf as a transformation between: 
      # `reference_frame` -> `base_link_frame`
      base_link_frame: base_link
      reference_frame: map

      # If true, an nav_msgs/Odometry message will be also published from SLAM solution:
      publish_odometry_msgs_from_slam: true

      # do not publish to /tf from ground_truth
      publish_tf_from_robot_pose_observations: false

      # If true, the original dataset timestamps will be used to publish.
      # Otherwise, the wallclock time will be used.
      publish_in_sim_time: false

      period_publish_new_localization: 0.1 # [s]
      period_publish_new_map: 5.0 # [s]

