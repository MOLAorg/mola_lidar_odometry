# This file holds parameters for mola::LidarInertialOdometry,
# for use either programatically calling initilize(), or from a MOLA system
# launch file. See "launch/*" examples.

params:
  # These sensor labels will be handled as LIDAR observations:
  lidar_sensor_labels: ['lidar', 'Velodyne1_SCAN','pandar','livox','os_sensor','KINECT']

  # Optionally, drop lidar data too close in time:
  min_time_between_scans: 0 # 0.2  # [seconds]

  # LIDAR observations are, first, loaded using a generator:
  observations_generator: ~
  
  # then, optionally, filtered before being registered with ICP
  # against the local map:
  observations_filter: $include{./observations_filter_pipeline.yaml}

  # These sensor labels will be handled as IMU observations:
  imu_sensor_label: 'imu'
  
  min_dist_xyz_between_keyframes: 1.0  # [m]
  min_rotation_between_keyframes: 15.0  # [deg]
  
  icp_settings_with_vel: $include{./icp_odom_params.yaml}
  icp_settings_without_vel: $include{./icp_odom_without_velocity_model_params.yaml}

  # Minimum ICP quality to insert it into the map:
  min_icp_goodness: 0.30

  # Local map updates:
  # - First time: Using the mp2p_icp pipeline generator:
  localmap_generator: $include{./localmap_generator.yaml}
  # - Rest of observations: use these *pointcloud* layers of the observation 
  #   metric_map_t and *insert* them into the local map:
  observation_layers_to_merge_local_map: 'decimated_for_map_insert'

  # To profile the internal steps of the ICP implementation:
  icp_profiler_enabled: true

