# mp2p_icp ICP pipeline configuration file, for use in ICP 
# odometry and SLAM packages.
#
# YAML configuration file for use with the CLI tool mp2p-icp-run or
# programmatically from function mp2p_icp::icp_pipeline_from_yaml()
#
class_name: mp2p_icp::ICP

# See: mp2p_icp::Parameter
params:
  maxIterations: 100
  minAbsStep_trans: 1e-4
  minAbsStep_rot: 1e-4

  #debugPrintIterationProgress: true  # Print progress
  generateDebugFiles: true  # Can be override with env var "MP2P_ICP_GENERATE_DEBUG_FILES=1"
  debugFileNameFormat: "icp-logs/icp-run-$UNIQUE_ID-local_$LOCAL_ID$LOCAL_LABEL-to-global_$GLOBAL_ID$GLOBAL_LABEL.icplog"
  decimationDebugFiles: 500

solvers:
#  - class: mp2p_icp::Solver_Horn
#    params:
#      ~
  - class: mp2p_icp::Solver_GaussNewton
    params:
     maxIterations: 4
     robustKernel: 'RobustKernel::GemanMcClure'
     robustKernelParam: 1.0

# Sequence of one or more pairs (class, params) defining mp2p_icp::Matcher
# instances to pair geometric entities between pointclouds.
matchers:
  - class: mp2p_icp::Matcher_Points_DistanceThreshold
    params:
      threshold: 2.5
      #pairingsPerPoint: 1
      #maxLocalPointsPerLayer: 0  # !=0 means subsample "local" point cloud
      #runFromIteration: 0  # "from 0 to 0" means "all"
      runUpToIteration: 10
      #
      # If "pointLayerMatches" is not defined, layers will be matched against
      # those with the same name in both maps:
      pointLayerMatches:
        - {global: "voxelmap", local: "decimated_for_icp", weight: 1.0}
  - class: mp2p_icp::Matcher_Points_DistanceThreshold
    params:
      threshold: 0.5
      #pairingsPerPoint: 1
      #maxLocalPointsPerLayer: 0  # !=0 means subsample "local" point cloud
      runFromIteration: 10  # "from 0 to 0" means "all"
      #runUpToIteration: 10
      #
      # If "pointLayerMatches" is not defined, layers will be matched against
      # those with the same name in both maps:
      pointLayerMatches:
        - {global: "voxelmap", local: "decimated_for_icp", weight: 1.0}

quality:
  - class: mp2p_icp::QualityEvaluator_PairedRatio
    params:
     reuse_icp_pairings: true
     threshold: 0.75 # ignored when 'reuse_icp_pairings'==true
     pointLayerMatches:
       - {global: "voxelmap", local: "decimated_for_icp", weight: 1.0}

