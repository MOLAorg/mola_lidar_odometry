# Filters:
#
# One filter object will be created for each entry, instancing the given class,
# and with the given parameters. Filters are run in definition order on the
# input metric_map_t object.
#

#- class_name: mp2p_icp_filters::FilterDeskew
#  params:
#    input_pointcloud_layer: 'raw'
#    output_pointcloud_layer: 'deskewed'
#    silently_ignore_no_timestamps: true # To handle more dataset types
#    output_layer_class: 'mrpt::maps::CPointsMapXYZI'  # Keep intensity channel
    
    # These (vx,...wz) are variable names that must be defined via the
    # mp2p_icp::Parameterizable API to update them dynamically.
#    twist: [VX,VY,VZ,WX,WY,WZ]

# Remove points too close, to prevent "noise" from the vehicle, 
# the person next to the robot, etc. Remove too distant points since
# the tiniest angular error projects to a large translational error.
- class_name: mp2p_icp_filters::FilterByRange
  params:
    input_pointcloud_layer: 'raw'  # 'deskewed'
    output_pointcloud_layer: 'filtered'
    keep_between: true # Remove points out of this range limits
    range_min: 5.0
    range_max: 1.2*ESTIMATED_SENSOR_MAX_RANGE

- class_name: mp2p_icp_filters::FilterCurvature
  params:
    input_pointcloud_layer: 'filtered'
    output_layer_larger_curvature: 'large_curvature'
    output_layer_smaller_curvature: 'smaller_curvature'
    #output_layer_other: 'large_curvature'
    max_cosine: 0.2
    min_clearance: 0.10
    max_gap: 1.0

- class_name: mp2p_icp_filters::FilterDecimateVoxels
  params:
    input_pointcloud_layer: 'large_curvature'
    output_pointcloud_layer: 'decimated_for_icp_large_curvature'
    voxel_filter_resolution: 1.00*1e-2*ESTIMATED_SENSOR_MAX_RANGE  # [m]
    use_closest_to_voxel_average: true

- class_name: mp2p_icp_filters::FilterDecimateVoxels
  params:
    input_pointcloud_layer: 'large_curvature'
    output_pointcloud_layer: 'decimated_for_map_large_curvature'
    voxel_filter_resolution: 0.5*1e-2*ESTIMATED_SENSOR_MAX_RANGE  # [m]
    use_closest_to_voxel_average: true

- class_name: mp2p_icp_filters::FilterDecimateVoxels
  params:
    input_pointcloud_layer: 'smaller_curvature'
    output_pointcloud_layer: 'decimated_for_icp_smaller_curvature'
    voxel_filter_resolution: 1.5*1e-2*ESTIMATED_SENSOR_MAX_RANGE  # [m]
    use_closest_to_voxel_average: true

- class_name: mp2p_icp_filters::FilterDecimateVoxels
  params:
    input_pointcloud_layer: 'smaller_curvature'
    output_pointcloud_layer: 'decimated_for_map_smaller_curvature'
    voxel_filter_resolution: 0.75*1e-2*ESTIMATED_SENSOR_MAX_RANGE  # [m]
    use_closest_to_voxel_average: true

#- class_name: mp2p_icp_filters::FilterDecimateVoxels
#  params:
#    input_pointcloud_layer: 'filtered'
#    output_pointcloud_layer: 'decimated_for_icp_planes'
#    voxel_filter_resolution: 10.00*1e-2*ESTIMATED_SENSOR_MAX_RANGE  # [m]
#    use_closest_to_voxel_average: true

# Remove layers to save memory and log file storage
- class_name: mp2p_icp_filters::FilterDeleteLayer
  params:
    pointcloud_layer_to_remove: ['raw', 'filtered', 'large_curvature', 'smaller_curvature']
